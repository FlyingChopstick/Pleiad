<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PleiadTasks</name>
    </assembly>
    <members>
        <member name="T:PleiadTasks.TaskHandle">
            <summary>
            Structure that stores task info
            </summary>
        </member>
        <member name="P:PleiadTasks.TaskHandle.Action">
            <summary>
            What task should do
            </summary>
        </member>
        <member name="P:PleiadTasks.TaskHandle.Task">
            <summary>
            Task object to track
            </summary>
        </member>
        <member name="T:PleiadTasks.Tasks">
            <summary>
            Manages creating, starting and completing threaded tasks
            </summary>
        </member>
        <member name="P:PleiadTasks.Tasks.EntityManager">
            <summary>
            Entity manager that is used
            </summary>
        </member>
        <member name="P:PleiadTasks.Tasks.QueuedTasksCount">
            <summary>
            Amount of queued tasks;
            </summary>
        </member>
        <member name="M:PleiadTasks.Tasks.SetTask(PleiadTasks.TaskHandle@)">
            <summary>
            Sets a new task
            </summary>
            <param name="handle">Handle for task</param>
        </member>
        <member name="M:PleiadTasks.Tasks.SetTaskOn``1(TaskOnHandle{``0}@)">
            <summary>
            Sets a new task on component chunks
            </summary>
            <param name="handle">Handle for task</param>
        </member>
        <member name="M:PleiadTasks.Tasks.ChainTasks(PleiadTasks.TaskHandle@,PleiadTasks.TaskHandle@)">
            <summary>
            Wait for previous task to finish and start next
            </summary>
            <param name="previous">This task must complete</param>
            <param name="next">Next task to run</param>
        </member>
        <member name="M:PleiadTasks.Tasks.ChainTasks``1(TaskOnHandle{``0}@,PleiadTasks.TaskHandle@)">
            <summary>
            Wait for previous task to finish and start next
            </summary>
            <param name="previous">This task must complete</param>
            <param name="next">Next task to run</param>
        </member>
        <member name="M:PleiadTasks.Tasks.ChainTasks``1(PleiadTasks.TaskHandle@,TaskOnHandle{``0}@)">
            <summary>
            Wait for previous task to finish and start next
            </summary>
            <param name="previous">This task must complete</param>
            <param name="next">Next task to run</param>
        </member>
        <member name="M:PleiadTasks.Tasks.ChainTasks``1(TaskOnHandle{``0}@,TaskOnHandle{``0}@)">
            <summary>
            Wait for previous task to finish and start next
            </summary>
            <param name="previous">This task must complete</param>
            <param name="next">Next task to run</param>
        </member>
        <member name="M:PleiadTasks.Tasks.CompleteTasks">
            <summary>
            Wait for all tasks to complete
            </summary>
        </member>
        <member name="M:PleiadTasks.Tasks.WaitHandle(PleiadTasks.TaskHandle@)">
            <summary>
            Wait for that task to complete
            </summary>
            <param name="handle">Handle for task</param>
        </member>
        <member name="M:PleiadTasks.Tasks.WaitHandle``1(TaskOnHandle{``0}@)">
            <summary>
            Wait for that task to complete
            </summary>
            <param name="handle">Handle for task</param>
        </member>
        <member name="F:PleiadTasks.Tasks._tasks">
            <summary>
            List of all set tasks
            </summary>
        </member>
        <member name="T:TaskOnHandle`1">
            <summary>
            Structure that stores info about task on component chunks
            </summary>
            <typeparam name="T">Selected component</typeparam>
        </member>
        <member name="P:TaskOnHandle`1.ActionOn">
            <summary>
            Action to perform on chunks
            </summary>
        </member>
        <member name="P:TaskOnHandle`1.Tasks">
            <summary>
            List of tasks on chunks
            </summary>
        </member>
        <member name="T:TaskOnHandle`1.ActionOnDelegate">
            <summary>
            Delegate to perform action on array
            </summary>
            <param name="index">Current index</param>
            <param name="array">Array of component data</param>
        </member>
    </members>
</doc>
