<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PleiadExtensions</name>
    </assembly>
    <members>
        <member name="T:PleiadExtensions.Arrays.ArrayExtensions">
            <summary>
            Extensions for arrays
            </summary>
        </member>
        <member name="M:PleiadExtensions.Arrays.ArrayExtensions.IsSubsetOf``1(``0[],System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Tests if the array is a subset of another array
            </summary>
            <typeparam name="T">Array type</typeparam>
            <param name="subset">Target</param>
            <param name="source">Array to test against</param>
            <returns><see langword="true"/> if is a subset, <see langword="false"/> otherwise</returns>
        </member>
        <member name="M:PleiadExtensions.Arrays.ArrayExtensions.IsSubsetOf``1(``0[],``0[])">
            <summary>
            Tests if the array is a subset of another array
            </summary>
            <typeparam name="T">Array type</typeparam>
            <param name="subset">Target</param>
            <param name="source">Array to test against</param>
            <returns><see langword="true"/> if is a subset, <see langword="false"/> otherwise</returns>
        </member>
        <member name="T:PleiadExtensions.Files.FileContract">
            <summary>
            Contains filename and a lock object for file
            </summary>
        </member>
        <member name="M:PleiadExtensions.Files.FileContract.#ctor(System.String)">
            <summary>
            Contains filename and a lock object for file
            </summary>
        </member>
        <member name="P:PleiadExtensions.Files.FileContract.FileName">
            <summary>
            Filename
            </summary>
        </member>
        <member name="P:PleiadExtensions.Files.FileContract.Locker">
            <summary>
            Locker object
            </summary>
        </member>
        <member name="F:PleiadExtensions.Files.FileContract.DefaultTimeout">
            <summary>
            Default timeout for write retry
            </summary>
        </member>
        <member name="P:PleiadExtensions.Files.FileContract.Timeout">
            <summary>
            Custom timeout for write retry
            </summary>
        </member>
        <member name="M:PleiadExtensions.Files.FileContract.ReadLines">
            <summary>
            Read all lines from the file
            </summary>
            <returns>Array of strings in file/></returns>
        </member>
        <member name="M:PleiadExtensions.Files.FileContract.ReadContaining(System.String)">
            <summary>
            Read all lines that contain a sequence
            </summary>
            <param name="sequence">Query sequence</param>
            <returns>Array of strings</returns>
        </member>
        <member name="M:PleiadExtensions.Files.FileContract.Write(System.String)">
            <summary>
            Append line to the file
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:PleiadExtensions.Files.FileContract.WriteLines(System.String[])">
            <summary>
            Append lines to the file
            </summary>
            <param name="content"></param>
        </member>
    </members>
</doc>
